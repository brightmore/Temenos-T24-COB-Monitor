<?php

// autoload_real.php @generated by Composer

class ComposerAutoloaderInitd291a0ccb99f2993a8c89e612995d77e
{
    private static $loader;

    public static function loadClassLoader($class)
    {
	if ('Composer\Autoload\ClassLoader' === $class) {
	    require __DIR__ . '/ClassLoader.php';
	}
    }

    public static function getLoader()
    {
	if (null !== self::$loader) {
	    return self::$loader;
	}

	spl_autoload_register(array('ComposerAutoloaderInitd291a0ccb99f2993a8c89e612995d77e', 'loadClassLoader'), true, true);
	self::$loader = $loader = new \Composer\Autoload\ClassLoader();
	spl_autoload_unregister(array('ComposerAutoloaderInitd291a0ccb99f2993a8c89e612995d77e', 'loadClassLoader'));

	$includePaths = require __DIR__ . '/include_paths.php';
	array_push($includePaths, get_include_path());
	set_include_path(join(PATH_SEPARATOR, $includePaths));

	$map = require __DIR__ . '/autoload_namespaces.php';
	foreach ($map as $namespace => $path) {
	    $loader->set($namespace, $path);
	}

	$map = require __DIR__ . '/autoload_psr4.php';
	foreach ($map as $namespace => $path) {
	    $loader->setPsr4($namespace, $path);
	}

	$classMap = require __DIR__ . '/autoload_classmap.php';
	if ($classMap) {
	    $loader->addClassMap($classMap);
	}

	$loader->register(true);

	$includeFiles = require __DIR__ . '/autoload_files.php';
	foreach ($includeFiles as $file) {
	    composerRequired291a0ccb99f2993a8c89e612995d77e($file);
	}

	return $loader;
    }
}

function composerRequired291a0ccb99f2993a8c89e612995d77e($file)
{
    require $file;
}
